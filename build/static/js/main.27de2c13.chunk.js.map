{"version":3,"sources":["utils/loader.js","containers/login/index.js","utils/history.js","utils/findYourBusiness.js","containers/register/index.js","containers/forgot-password/index.js","routes/index.js","App.js","serviceWorker.js","aws-exports.js","index.js"],"names":["ValueLoader","type","color","height","width","Login","props","match","url","useState","user","setUser","password","setPassword","signedIn","setSignedIn","error","setError","userError","setuserError","passwordError","setPasswordError","message","setmessage","loader","setLoader","useEffect","authState","a","Auth","currentAuthenticatedUser","updateUser","handleSubmit","e","preventDefault","Validation","signIn","username","then","catch","err","test","String","toLowerCase","validateEmail","handleChange","target","id","value","onClick","signOut","window","location","reload","className","to","class","onSubmit","onChange","placeholder","htmlFor","includes","createBrowserHistory","SearchLocationInput","autoComplete","query","setQuery","autoCompleteRef","useRef","handleScriptLoad","updateQuery","google","maps","places","Autocomplete","current","setFields","addListener","handlePlaceSelect","addressObject","getPlace","name","callback","script","document","createElement","readyState","onreadystatechange","onload","src","getElementsByTagName","appendChild","loadScript","ref","event","Register","verified","setVerified","email","setEmail","confirmationCode","setconfirmationCode","phone_number","setPhoneNumber","setMessage","codeError","setCodeError","firstNameError","setFirstNameError","emailError","setEmailError","phoneError","setPhoneError","business","setbusiness","confirmSignUp","history","push","signUp","attributes","ForgotPassword","setUserName","code","setCode","new_password","confirmPass","setConfirmPass","passErr","setPassErr","verificationErr","setVerificationErr","forgotPasswordSubmit","data","submitPassword","forgotPassword","reset","submitEmail","Routes","path","component","exact","from","App","Boolean","hostname","awsmobile","Amplify","configure","awsExports","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.27de2c13.chunk.js","sourcesContent":["import React from 'react'\nimport Loader from 'react-loader-spinner'\n\nconst ValueLoader = () => {\n \n     return(\n        <Loader type=\"Oval\" color=\"#00BFFF\" height={25} width={35} />\n     );\n  \n }\n\n export default ValueLoader","import React, {useState, useEffect} from 'react'\nimport './login.css'\nimport { Auth } from 'aws-amplify';\nimport {Link} from \"react-router-dom\";\nimport ValueLoader from '../../utils/loader'\n\nconst Login = (props) => {\n    const type = props.match.url\n    const [user,setUser]= useState()\n    const [password,setPassword]= useState()\n    const [signedIn,setSignedIn]= useState(false)\n    const [error,setError] = useState(false)\n    const [userError,setuserError] = useState(false)\n    const [passwordError, setPasswordError] = useState(false)\n    const [message,setmessage] = useState()\n    const [loader,setLoader] = useState(false)\n\n    useEffect(() => {\n        let updateUser = async authState => {\n          try {\n             await Auth.currentAuthenticatedUser()\n            setSignedIn(true)\n            \n          } catch {\n           \n          }\n        }\n        updateUser()\n      }, []);\n\n    const signIn = () => {\n        Auth.signIn({\n            username: user,\n            password: password\n        })\n        .then(() =>{  setSignedIn(true) \n    })\n        .catch((err) => setmessage(err.message),setError(true))\n    }\n\n    function validateEmail(user) {\n        // eslint-disable-next-line no-useless-escape\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(user).toLowerCase());\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if(Validation()){\n         setLoader(true)\n         signIn()\n         setUser('')\n         setPassword('')\n        }\n}\n\nconst Validation = () => {\n    if(!validateEmail(user)){\n        setuserError(true)\n    }\n    if(!password){\n        setPasswordError(true)\n    }\n    else{\n        return true\n    }\n\n}\n\n   const handleChange = e => {\n       setError(false)\n       setuserError(false)\n       setPasswordError(false)\n        if (e.target.id === 'username') {\n          setUser(e.target.value)\n          \n        } else if (e.target.id === 'password') {\n          setPassword(e.target.value)\n        }\n    }\n\n\n  \n    if (signedIn) {\n        return (\n            <div>\n                <h1>You have signed in!</h1>\n                <button type=\"submit\" onClick = {() => (\n                    // eslint-disable-next-line no-sequences\n                    Auth.signOut(),\n                    window.location.reload())} className=\"btn btn-primary\">  <Link to ='/register' ></Link>Logout</button>\n            </div>\n        );\n    } \n    else{\n\n    return(\n    <div className=\"login-wrapper\">\n        <div className=\"container-fluid\">\n        <div className=\"row\">\n        <div className=\"col-md-6 cover-image\"> </div>\n\t\t\t<div className=\"col-md-6\">\n                <div className=\"login-form-wrapper\">\n\t\t\t\t\t<div className=\"login-form-header\">\n\t\t\t\t\t\t<h1>Howdy! Welcome Back</h1>\n\t\t\t\t\t\t<p> login to start working on your business profile page </p>\n\t\t\t\t\t</div>\n                    {error ?<div class=\"form-group\"><br /><h6>{message}</h6></div>: null}\n                    <div className=\"login-form-nested-wrapper login-fields-spacing\"> \n                    <form onSubmit={ (e) => handleSubmit(e) }>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n                            <input type=\"text\" id='username' onChange={(e) => handleChange(e)} \n                            className={userError ? \"form-error\": \"form-control\"} placeholder=\"Email address\"/>\n\t\t\t\t\t\t\t</div>\n                            <div className=\"form-group\">\n                                <input type=\"password\" id='password' onChange={(e) => handleChange(e)}\n                                 className={passwordError ? \"form-error\": \"form-control\"} placeholder=\"Password\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"form-group remember-checkbox\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"rememberMe\" />\n\t\t\t\t\t\t\t\t<label htmlFor=\"rememberMe\">Remember me</label>\n\t\t\t\t\t\t\t</div>\t\n                            <button type=\"submit\" className=\"btn btn-primary\">{loader && !message? <ValueLoader /> : 'Login'}</button>\n    \n                            <div className=\"login-links-wrapper login-links-extra-links\">\n                            { type.includes('business') ?\n                            <Link to ='/business/register' >Don't have an account? <strong>Signup</strong></Link> :\n                             <Link to ='/curator/register' >Don't have an account? <strong>Signup</strong></Link>\n                             }\n                               { type.includes('business') ?\n                            <Link to ='/business/forgot-password' >Forgot Password</Link> :\n                             <Link to ='/curator/forgot-password' >Forgot Password</Link>\n                             }\n\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</form>\n                    \n                    \n                    </div>\n\n            </div>\n        \n\n            </div>\n        </div>\n    </div>\n    </div>\n    )\n    }\n}\n\nexport default Login","import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory()","import React, { useState, useEffect, useRef } from \"react\";\n      function SearchLocationInput() { \n            const [query, setQuery] = useState(\"\");\n            const autoCompleteRef = useRef(null);\n            let autoComplete;\n\n            const loadScript = (url, callback) => {\n                let script = document.createElement(\"script\");\n                script.type = \"text/javascript\";\n    \n                    if (script.readyState) {\n                        script.onreadystatechange = function() {\n                            if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n                            script.onreadystatechange = null;\n                            callback();\n                        }\n                    };\n                            } else {\n                                     script.onload = () => callback();\n                                }\n    \n                        script.src = url;\n                        document.getElementsByTagName(\"head\")[0].appendChild(script);\n                        };\n    \n                        function handleScriptLoad(updateQuery, autoCompleteRef) {\n                          autoComplete = new window.google.maps.places.Autocomplete(\n                          autoCompleteRef.current\n                        );\n                          autoComplete.setFields([\"address_components\", \"formatted_address\",\"name\"]);\n                          autoComplete.addListener(\"place_changed\", () =>\n                         handlePlaceSelect(updateQuery)\n                        );\n                        }\n    \n                async function handlePlaceSelect(updateQuery) {\n                     const addressObject = autoComplete.getPlace();\n                     const value = addressObject.name\n                     updateQuery(value);\n                }\n\n            useEffect(() => {\n            loadScript(\n            `https://maps.googleapis.com/maps/api/js?key=AIzaSyAYVZIvAZkQsaxLD3UdFH5EH3DvYmSYG6Q&libraries=places`,\n             () => handleScriptLoad(setQuery, autoCompleteRef)\n            );\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []);\n\n        return (\n          \n            <input\n                ref={autoCompleteRef}\n                onChange={event => setQuery(event.target.value)}\n                placeholder=\"Enter Your Business\"\n                value={query}\n            />\n            \n            );\n        }\n\n    export default SearchLocationInput;\n","import React, {useState} from 'react'\nimport './register.css'\nimport { Auth } from 'aws-amplify';\nimport history from '../../utils/history'\nimport {Link} from \"react-router-dom\";\nimport SearchLocationInput  from '../../utils/findYourBusiness'\n\nconst Register = (props) => {\n     const type = props.match.url\n    const [username,setUser]= useState()\n    const [password,setPassword]= useState()\n    const [verified,setVerified]= useState(false)\n    const [email,setEmail]= useState()\n    const [confirmationCode,setconfirmationCode]= useState()\n    const [phone_number,setPhoneNumber]= useState()\n    const [err,setError] = useState(false)\n    const [message,setMessage] = useState()\n    const [codeError,setCodeError] = useState(false)\n    const [firstNameError,setFirstNameError] = useState(false)\n    const [emailError,setEmailError] = useState(false)\n    const [phoneError, setPhoneError] = useState(false)\n    const [passwordError,setPasswordError] = useState(false)\n    const [business,setbusiness] = useState(false)\n\n    const signUp = () => {\n        Auth.signUp({\n            username: email,\n            password: password,\n            attributes: {\n                email: email,\n                phone_number: phone_number, \n                name: username,\n            }\n        })\n        .then(() => {\n            setVerified(true)\n        })\n        .catch((err) => setMessage(err.message) , setError(true) )\n    }\n  \n    const confirmSignUp = () => {\n        Auth.confirmSignUp(email, confirmationCode)\n        .then(() => {\n            if(type.includes('business')){\n            return (history.push(`/business/login`),\n            window.location.reload() )\n            }\n            else{\n                return( history.push(`/curator/login`),\n                window.location.reload())  \n            }\n        })\n        .catch((err) => setCodeError(true))\n    }\n \n    function validateEmail(email) {\n        // eslint-disable-next-line no-useless-escape\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    const Validation = () => {\n        if(!username){\n            setFirstNameError(true)\n        }\n        if(!phone_number){\n            setPhoneError(true)\n        }\n        if(!validateEmail(email)){\n            setEmailError(true)\n        }\n        if(!password){\n            setPasswordError(true)\n        }\n        else{\n            return true\n        }\n\n    }\n  \n   const handleSubmit = (e) => {\n        e.preventDefault();\n        if (verified) {\n            confirmSignUp();\n            setconfirmationCode('')\n            setUser('')\n          }\n        if(Validation()){\n           signUp();\n          setPassword()\n          setPhoneNumber()\n        }\n    }\n  \n    const handleChange = (e) => {\n        setFirstNameError(false)\n        setPhoneError(false)\n        setEmailError(false)\n        setPasswordError(false)\n        setError(false)\n        setCodeError(false)\n        if (e.target.id === 'username') {\n            setUser(e.target.value)\n        } else if (e.target.id === 'password') {\n          setPassword(e.target.value)\n        } else if (e.target.id === 'phone_number') {\n          setPhoneNumber(e.target.value)\n        } else if (e.target.id === 'email') {\n          setEmail(e.target.value)\n        } else if (e.target.id === 'confirmationCode') {\n          setconfirmationCode(e.target.value)\n        }\n    }\n\n    if(type.includes('business')){\n    return(\n        <div className=\"login-wrapper\">\n        <div className=\"container-fluid\">\n            <div className=\"row\">\t\t\t\n                <div className=\"col-md-6 cover-image\"> </div>\n                <div className=\"col-md-6\">\n                    \n                    <div className=\"login-form-wrapper\">\n                    \n                        <div className=\"login-form-header\">\n                            <h1>Register to Get Started</h1>\n                            <p> Start working on your business profile page </p>\n                        </div>\n                        {err ?<div class=\"form-group\"><br /><h6>{message}</h6></div>: null}\n                       \n                        <div className=\"login-form-nested-wrapper\">\n                            { verified ? ( <form onSubmit={ (e)=> handleSubmit(e) }>\n                            <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                    <p> Enter the Confirmation code sent to your Registered Email</p>\n                                        <div className=\"form-group\">\n                                          <input id='confirmationCode' type='text' onChange={ (e) => handleChange(e)} placeholder=\"Confirmation Code\"/>\n                                        </div>\n                                        <button type=\"submit\" className=\"btn btn-primary\">Confirm Sign up</button>\n                                        {codeError ?<div class=\"form-group\"><br /><h6>Confirmation code does not match</h6></div>: null}\n                                     </div>\n                          </div>\n                        </form> ) :\n                            <form onSubmit={ (e)=> handleSubmit(e) }>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <input type=\"text\" id=\"username\" onChange={ (e) => handleChange(e) }\n                                             className={firstNameError ? \"form-error\": \"form-control\"} placeholder=\"First Name\"/>\n                                                           \n                                        </div>\t\t\t\t\t\t\t\t\t\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <input id=\"last_name\" onChange={ (e) => handleChange(e)} type=\"text\" className=\"form-control\" placeholder=\"Last Name\"/>\n                                        </div>\t\t\t\t\t\t\t\t\t\n                                    </div>\t\t\t\t\t\t\t\t\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <div className=\"form-group\">\n                                            <input id='phone_number' onChange={ (e) => handleChange(e) } \n                                            className={phoneError ? \"form-error\": \"form-control\"} placeholder=\"Phone Number\"/>\n                                        </div>\t\t\t\t\t\t\t\t\t\n                                    </div>\n                                </div>\t\t\n    \n            \n                                \n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <div className=\"form-group\">\n                                            <input type=\"email\" id='email' onChange={ (e) => handleChange(e) } \n                                            className={emailError ? \"form-error\": \"form-control\"} placeholder=\"Email address\"/>\n                                    \n                                        </div>\t\t\t\t\t\t\t\t\t\n                                    </div>\n                                </div>\t\n    \n    \n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <div className=\"form-group\">\n                                            <input type=\"password\" id=\"password\" onChange={ (e) => handleChange(e) } \n                                            className={passwordError ? \"form-error\": \"form-control\"} placeholder=\"Password\"/>\n                                        </div>\t\t\t\t\t\t\t\t\t\n                                    </div>\n                                </div>\n    \n    \n                          \n                                <div className=\"find-your-business-wrapper\">\n                                    <h2 onClick= {()=> setbusiness(true)}> Find Your Business</h2>\n                                    <br />\n                                    <div className=\"form-group\">\n                                    {business ? <SearchLocationInput className=\"form-control\" onChange={() => null} />: null }\n                                        </div>\n                                    <p>By clicking register, I represent I have read, understand, and agree to the Postmates Privacy Policy and Terms of Service. This site is protected bt reCAPTCHA and google Privacy Policy and Terms of Service apply.</p>\n                                </div>\n                        \n                            \n                                \n    \n                                <button type=\"submit\" className=\"btn btn-primary\">Register</button>\n                                <div className=\"login-links-wrapper login-links-extra-links\">\n                                { type.includes('business') ?\n                            <Link to ='/business/login' className=\"link-btn\">Already have an account? <strong>Log In</strong></Link> :\n                            <Link to ='/curator/login' className=\"link-btn\">Already have an account? <strong>Log In</strong></Link>\n                             }\n                                \n                                </div>\n                          \t\t\t\t\t\t\t\n    \n                                \n                            </form>\n}\n                        </div>\n                  \n    \n                    </div>\n              \n    \n                    \n                </div>\t\t\t\n            </div>\n        </div>\n    </div>\n    )\n}\nelse{\n    return(\n        <div className=\"login-wrapper\">\n        <div className=\"container-fluid\">\n            <div className=\"row\">\t\t\t\n                <div className=\"col-md-6 cover-image\"> </div>\n                <div className=\"col-md-6\">\n                    \n                    <div className=\"login-form-wrapper\">\n                    \n                        <div className=\"login-form-header\">\n                            <h1>Register to Get Started</h1>\n                            <p> Start working on your business profile page </p>\n                        </div>\n                       \n                        <div className=\"login-form-nested-wrapper\">\n                            { verified ? ( <form onSubmit={ (e)=> handleSubmit(e) }>\n                            <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                    <p> Enter the Confirmation code sent to your Registered Email</p>\n                                        <div className=\"form-group\">\n                                          <input id='confirmationCode' type='text' onChange={ (e) => handleChange(e)} placeholder=\"Confirmation Code\"/>\n                                        </div>\n                                        <button type=\"submit\" className=\"btn btn-primary\">Sign up</button>\n                                        {codeError ?<div className=\"form-group\"><br /><h6>Confirmation code does not match</h6></div>: null}\n                                     </div>\n                          </div>\n                        </form> ) :\n                            <form onSubmit={ (e)=> handleSubmit(e) }>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <input type=\"text\" id=\"username\" onChange={ (e) => handleChange(e) } \n                                            className={firstNameError ? \"form-error\": \"form-control\"} placeholder=\"First Name\"/>\n                                        \n                                        </div>\t\t\t\t\t\t\t\t\t\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <input id=\"last_name\" onChange={ (e) => handleChange(e)} type=\"text\" className=\"form-control\" placeholder=\"Last Name\"/>\n                                        </div>\t\t\t\t\t\t\t\t\t\n                                    </div>\t\t\t\t\t\t\t\t\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <div className=\"form-group\">\n                                            <input id='phone_number' onChange={ (e) => handleChange(e) } \n                                           className={phoneError ? \"form-error\": \"form-control\"} placeholder=\"Phone Number\"/>\n                                          \n                                        </div>\t\t\t\t\t\t\t\t\t\n                                    </div>\n                                </div>\t\t\n    \n            \n                                \n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <div className=\"form-group\">\n                                            <input type=\"email\" id='email' onChange={ (e) => handleChange(e) } \n                                            className={emailError ? \"form-error\": \"form-control\"} placeholder=\"Email address\"/>\n                                           \n                                        </div>\t\t\t\t\t\t\t\t\t\n                                    </div>\n                                </div>\t\n    \n    \n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <div className=\"form-group\">\n                                            <input type=\"password\" id=\"password\" onChange={ (e) => handleChange(e) } \n                                            className={passwordError ? \"form-error\": \"form-control\"} placeholder=\"Password\"/>\n                                           \n                                        </div>\t\t\t\t\t\t\t\t\t\n                                    </div>\n                                </div>\n    \n    \n                          \n                                <div className=\"find-your-business-wrapper\">\n                                    <p>By clicking register, I represent I have read, understand, and agree to the Postmates Privacy Policy and Terms of Service. This site is protected bt reCAPTCHA and google Privacy Policy and Terms of Service apply.</p>\n                                </div>\n                            \n                                \n    \n                                <button type=\"submit\" className=\"btn btn-primary\">Register</button>\n                                 {err ?<div className=\"form-group\"><br /><h6>{message}</h6></div>: null}\n                                <div className=\"login-links-wrapper login-links-extra-links\">\n                                { type.includes('business') ?\n                            <Link to ='/business/login' className=\"link-btn\">Already have an account? <strong>Log In</strong></Link> :\n                            <Link to ='/curator/login' className=\"link-btn\">Already have an account? <strong>Log In</strong></Link>\n                             }\n                                \n                                </div>\n                          \t\t\t\t\t\t\t\n    \n                                \n                            </form>\n}\n                        </div>\n                  \n    \n                    </div>\n              \n    \n                    \n                </div>\t\t\t\n            </div>\n        </div>\n    </div>\n    )\n\n}\n}\n\nexport default Register","import React, { useState } from 'react'\nimport './forgot-password.css'\nimport { Auth } from 'aws-amplify';\nimport history from '../../utils/history'\nimport {Link} from 'react-router-dom'\nimport ValueLoader from '../../utils/loader'\n\nconst ForgotPassword = (props) => {\n    const type = props.match.url\n    const [username,setUserName] = useState()\n    const [code,setCode] = useState()\n    const [new_password,setPassword] = useState()\n    const [confirmPass,setConfirmPass] = useState()\n    const [email,setEmail] = useState(false)\n    const [error,setError] = useState(false)\n    const [emailError,setEmailError] = useState(false)\n    const [passErr,setPassErr] = useState(false)\n    const [verificationErr,setVerificationErr] = useState()\n    const [loader,setLoader] = useState(false)\n\n    const submitEmail = e => {\n        e.preventDefault()\n        setLoader(true)\n    Auth.forgotPassword(username)\n    .then(data => setEmail(true) )\n    .catch(err => setEmailError(true));\n        e.target.reset()\n    }\n   \n    const submitPassword = e => {\n        e.preventDefault()\n        setError(false)\n        setPassErr(false)\n    if(new_password === confirmPass){\n    Auth.forgotPasswordSubmit(username, code, new_password)\n    .then(data => {if(type.includes('business')){\n        return (history.push(`/business/login`),\n        window.location.reload() )\n        }\n        else{\n            return( history.push(`/curator/login`),\n            window.location.reload())  \n        }\n    }\n     )\n    .catch(err => setVerificationErr(err.message), setError(true));\n    setPassword('')\n    setCode('')\n}\n    else{\n        setPassErr(true)\n    }\n   }\n\n   const handleChange = e => {\n    setError(false)\n    setPassErr(false)\n    if (e.target.id === 'username') {\n      setUserName(e.target.value)\n      \n    } else if (e.target.id === 'password') {\n      setPassword(e.target.value)\n    }\n    else if (e.target.id === 'code') {\n        setCode(e.target.value)\n      }\n      else if (e.target.id === 'conPassword') {\n        setConfirmPass(e.target.value)\n      }\n}\n\nif(email === true)\n{ return(\n    <div className=\"login-wrapper\">\n    <div className=\"container-fluid\">\n        <div className=\"row\">\t\t\t\n            <div className=\"col-md-6 cover-image\"> </div>\n            <div className=\"col-md-6\">\n                <div className=\"login-form-wrapper\">\n                    <div className=\"login-form-header\">\n                        <h1>Reset Password </h1>\n                        <p> Enter the code sent to your Registered Email And also Enter your new password </p>\n                    </div>\n                    <div className=\"login-form-nested-wrapper\">\n                        <form onSubmit = {e => submitPassword(e)}>\n                            <div className=\"form-group\">\n                                <input type=\"text\" id=\"code\" className=\"form-control\" onChange={e => handleChange(e)} placeholder=\"Verification Code\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"password\" id=\"password\" className=\"form-control\" onChange={e => handleChange(e)} placeholder=\"New Password\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"password\" id=\"conPassword\" className=\"form-control\" onChange={e => handleChange(e)} placeholder=\"Confirm Password\"/>\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                            {error ?<div className=\"form-group\"><br /><h6> {verificationErr}</h6></div>: null}\n                            {passErr ?<div className=\"form-group\"><br /><h6> Password Does not match.</h6></div>: null}\n                            <div className=\"login-links-wrapper\">\n                            { type.includes('business') ?\n                            <Link to ='/business/login' className=\"link-btn\">Back to Login</Link> :\n                            <Link to ='/curator/login' className=\"link-btn\">Back to Login</Link>\n                             }\n                            </div>\n                        \n                            \n                        </form>\n                    </div>\n            \n\n                </div>\n\n                \n            </div>\t\t\t\n        </div>\n    </div>\n</div>\n)\n\n}\nelse{\n    return(\n        <div className=\"login-wrapper\">\n        <div className=\"container-fluid\">\n            <div className=\"row\">\t\t\t\n                <div className=\"col-md-6 cover-image\"> </div>\n                <div className=\"col-md-6\">\n                    <div className=\"login-form-wrapper\">\n                        <div className=\"login-form-header\">\n                            <h1>Reset Password </h1>\n                            <p> Enter the email address you registered with and we'll send you instruction to Reset your password </p>\n                        </div>\n                        <div className=\"login-form-nested-wrapper\">\n                            <form onSubmit = {e => submitEmail(e)}>\n                                <div className=\"form-group\">\n                                    <input type=\"email\" id=\"username\" className=\"form-control\" onChange={e => handleChange(e)} placeholder=\"Email address\"/>\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-primary\">{loader && !emailError ? <ValueLoader />: 'Reset'}</button>\n                                \n                                {emailError ?<div className=\"form-group\"><br /><h6>This Email is not Registered.</h6></div>: null}\n                                <div className=\"login-links-wrapper\">\n                            { type.includes('business') ?\n                            <Link to ='/business/login' className=\"link-btn\">Back to Login</Link> :\n                            <Link to ='/curator/login' className=\"link-btn\">Back to Login</Link>\n                             }\n                            </div>\n                            \n                                \n                            </form>\n                        </div>\n                \n    \n                    </div>\n    \n                    \n                </div>\t\t\t\n            </div>\n        </div>\n    </div>\n    )\n\n}\n    \n}\n\nexport default ForgotPassword","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Login from '../containers/login/index'\nimport Register from '../containers/register/index'\nimport ForgotPassword from '../containers/forgot-password/index'\n\n\n\n\nconst Routes = () => (\n  <Router>\n    <Switch>\n          <Route path=\"/business/login\" component={Login} />\n          <Route path=\"/curator/login\" component={Login} />\n          <Route path=\"/business/register\" component={Register} />\n          <Route path=\"/curator/register\" component={Register} />\n          <Route path=\"/business/forgot-password\" component={ForgotPassword} />\n          <Route path=\"/curator/forgot-password\" component={ForgotPassword} />\n          <Redirect exact from=\"/*\" to=\"/business/login\" />\n        </Switch>\n    \n  </Router>\n)\n\nexport default Routes","import React from 'react';\nimport './App.css';\nimport Routes from './routes'\n\nfunction App() {\n  return(\n    <Routes />\n  )\n   \n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-1\",\n    \"aws_cognito_identity_pool_id\": \"us-east-1:3189e103-8335-4b48-bb26-71e14898acc4\",\n    \"aws_cognito_region\": \"us-east-1\",\n    \"aws_user_pools_id\": \"us-east-1_W5dpJ0PhM\",\n    \"aws_user_pools_web_client_id\": \"7v7acardjlsrksegaim52bbqv4\",\n    \"oauth\": {}\n};\n\n\nexport default awsmobile;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Amplify from \"aws-amplify\";\nimport awsExports from \"./aws-exports\";\nAmplify.configure(awsExports);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}