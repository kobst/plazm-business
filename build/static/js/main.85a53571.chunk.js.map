{"version":3,"sources":["containers/login/index.js","utils/history.js","containers/register/index.js","containers/forgot-password/index.js","routes/index.js","App.js","serviceWorker.js","aws-exports.js","index.js"],"names":["Login","useState","user","setUser","password","setPassword","signedIn","setSignedIn","error","setError","useEffect","authState","a","Auth","currentAuthenticatedUser","console","log","updateUser","handleSubmit","e","preventDefault","signIn","username","then","catch","err","target","reset","handleChange","id","value","type","onClick","signOut","window","location","reload","className","onSubmit","onChange","placeholder","htmlFor","class","href","to","createBrowserHistory","Register","verified","setVerified","email","setEmail","confirmationCode","setconfirmationCode","phone_number","setPhoneNumber","message","setMessage","codeError","setCodeError","confirmSignUp","history","push","signUp","attributes","name","ForgotPassword","setUserName","code","setCode","new_password","confirmPass","setConfirmPass","setMessgae","emailError","setEmailError","passErr","setPassErr","forgotPasswordSubmit","data","submitPassword","forgotPassword","submitEmail","Routes","path","component","exact","from","App","Boolean","hostname","match","awsmobile","Amplify","configure","awsExports","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.85a53571.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport './login.css'\nimport { Auth } from 'aws-amplify';\nimport {Link } from \"react-router-dom\";\n\nconst Login = () => {\n    const [user,setUser]= useState()\n    const [password,setPassword]= useState()\n    const [signedIn,setSignedIn]= useState(false)\n    const [error,setError] = useState(false)\n    useEffect(() => {\n        let updateUser = async authState => {\n          try {\n             await Auth.currentAuthenticatedUser()\n            setSignedIn(true)\n            \n          } catch {\n              console.log('okkay')\n           \n          }\n        }\n        updateUser()\n      }, []);\n\n    const signIn = () => {\n        Auth.signIn({\n            username: user,\n            password: password\n        })\n        .then(() =>{  setSignedIn(true) \n            console.log('successfully signed in')})\n        .catch((err) => setError(true))\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n         signIn()\n         setUser('')\n         setPassword('')\n         e.target.reset()\n}\n\n   const handleChange = e => {\n        if (e.target.id === 'username') {\n          setUser(e.target.value)\n          \n        } else if (e.target.id === 'password') {\n          setPassword(e.target.value)\n        }\n    }\n\n\n  \n    if (signedIn) {\n        return (\n            <div>\n                <h1>You have signed in!</h1>\n                <button type=\"submit\" onClick = {() => (\n                    // eslint-disable-next-line no-sequences\n                    Auth.signOut(),\n                     window.location.reload())} className=\"btn btn-primary\">Logout</button>\n            </div>\n        );\n    } \n    else{\n\n    return(\n    <div className=\"login-wrapper\">\n        <div className=\"container-fluid\">\n        <div className=\"row\">\n        <div className=\"col-md-6 cover-image\"> </div>\n\t\t\t<div className=\"col-md-6\">\n                <div className=\"login-form-wrapper\">\n\t\t\t\t\t<div className=\"login-form-header\">\n\t\t\t\t\t\t<h1>Howdy! Welcome Back</h1>\n\t\t\t\t\t\t<p> login to start working on your business profile page </p>\n\t\t\t\t\t</div>\n                    <div className=\"login-form-nested-wrapper login-fields-spacing\"> \n                    <form onSubmit={ (e) => handleSubmit(e) }>\n\t\t\t\t\t\t\t<div className=\"form-group\">\n                            <input type=\"email\" id='username' onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Email address\"/>\n\t\t\t\t\t\t\t</div>\n                            <div className=\"form-group\">\n\t\t\t\t\t\t\t\t<input type=\"password\" id='password' onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Password\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"form-group remember-checkbox\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"rememberMe\" />\n\t\t\t\t\t\t\t\t<label htmlFor=\"rememberMe\">Remember me</label>\n\t\t\t\t\t\t\t</div>\t\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">Login</button>\n                            {error ?<div class=\"form-group\"><br /><h6> Invalid Username or Password</h6></div>: null}\n                            <div className=\"login-links-wrapper login-links-extra-links\">\n\t\t\t\t\t\t\t\t<a href=\" \" className=\"link-btn\"> <Link to ='/register' >\\Don't have an account? <strong>Signup</strong></Link></a>\n\t\t\t\t\t\t\t\t<a href=\" \" className=\"link-btn\"> <Link to ='/forgot-password' > Forgot Password </Link> </a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</form>\n                    \n                    \n                    </div>\n\n            </div>\n        \n\n            </div>\n        </div>\n    </div>\n    </div>\n    )\n    }\n}\n\nexport default Login","import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory()","import React, {useState} from 'react'\nimport './register.css'\nimport { Auth } from 'aws-amplify';\nimport history from '../../utils/history'\n\nconst Register = () => {\n    const [username,setUser]= useState()\n    const [password,setPassword]= useState()\n    const [verified,setVerified]= useState(false)\n    const [email,setEmail]= useState()\n    const [confirmationCode,setconfirmationCode]= useState()\n    const [phone_number,setPhoneNumber]= useState()\n    const [err,setError] = useState(false)\n    const [message,setMessage] = useState()\n    const [codeError,setCodeError] = useState(false)\n\n    const signUp = () => {\n        Auth.signUp({\n            username: email,\n            password: password,\n            attributes: {\n                email: email,\n                phone_number: phone_number, \n                name: username,\n            }\n        })\n        .then(() => {\n            setVerified(true)\n        })\n        .catch((err) => setMessage(err.message) , setError(true) )\n    }\n  \n    const confirmSignUp = () => {\n        Auth.confirmSignUp(email, confirmationCode)\n        .then(() => (\n          \n           history.push(`/login`)\n        ))\n        .catch((err) => setCodeError(true))\n    }\n  \n   const handleSubmit = (e) => {\n        e.preventDefault();\n  \n        if (verified) {\n          confirmSignUp();\n          setconfirmationCode('')\n          setUser('')\n        } else {\n          signUp();\n          setPassword()\n          setPhoneNumber()\n        }\n        e.target.reset();\n    }\n  \n    const handleChange = (e) => {\n        setError(false)\n        setCodeError(false)\n        if (e.target.id === 'username') {\n            setUser(e.target.value)\n        } else if (e.target.id === 'password') {\n          setPassword(e.target.value)\n        } else if (e.target.id === 'phone_number') {\n          setPhoneNumber(e.target.value)\n        } else if (e.target.id === 'email') {\n          setEmail(e.target.value)\n        } else if (e.target.id === 'confirmationCode') {\n          setconfirmationCode(e.target.value)\n        }\n    }\n    return(\n        <div className=\"login-wrapper\">\n        <div className=\"container-fluid\">\n            <div className=\"row\">\t\t\t\n                <div className=\"col-md-6 cover-image\"> </div>\n                <div className=\"col-md-6\">\n                    \n                    <div className=\"login-form-wrapper\">\n                    \n                        <div className=\"login-form-header\">\n                            <h1>Register to Get Started</h1>\n                            <p> Start working on your business profile page </p>\n                        </div>\n                       \n                        <div className=\"login-form-nested-wrapper\">\n                            { verified ? ( <form onSubmit={ (e)=> handleSubmit(e) }>\n                            <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                    <p> Enter the Confirmation code sent to your Registered Email</p>\n                                        <div className=\"form-group\">\n                                          <input id='confirmationCode' type='text' onChange={ (e) => handleChange(e)} placeholder=\"Confirmation Code\"/>\n                                        </div>\n                                        <button type=\"submit\" className=\"btn btn-primary\">Confirm Sign up</button>\n                                        {codeError ?<div class=\"form-group\"><br /><h6>Confirmation code does not match</h6></div>: null}\n                                     </div>\n                          </div>\n                        </form> ) :\n                            <form onSubmit={ (e)=> handleSubmit(e) }>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <input type=\"text\" id=\"username\" onChange={ (e) => handleChange(e) } className=\"form-control\" placeholder=\"First Name\"/>\n                                        </div>\t\t\t\t\t\t\t\t\t\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <div className=\"form-group\">\n                                            <input id=\"last_name\" onChange={ (e) => handleChange(e)} type=\"text\" className=\"form-control\" placeholder=\"Last Name\"/>\n                                        </div>\t\t\t\t\t\t\t\t\t\n                                    </div>\t\t\t\t\t\t\t\t\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <div className=\"form-group\">\n                                            <input id='phone_number' onChange={ (e) => handleChange(e) } className=\"form-control\" placeholder=\"Phone Number\"/>\n                                        </div>\t\t\t\t\t\t\t\t\t\n                                    </div>\n                                </div>\t\t\n    \n            \n                                \n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <div className=\"form-group\">\n                                            <input type=\"email\" id='email' onChange={ (e) => handleChange(e) } className=\"form-control\" placeholder=\"Email address\"/>\n                                        </div>\t\t\t\t\t\t\t\t\t\n                                    </div>\n                                </div>\t\n    \n    \n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <div className=\"form-group\">\n                                            <input type=\"password\" id=\"password\" onChange={ (e) => handleChange(e) } className=\"form-control\" placeholder=\"Password\"/>\n                                        </div>\t\t\t\t\t\t\t\t\t\n                                    </div>\n                                </div>\n    \n    \n                          \n                                <div className=\"find-your-business-wrapper\">\n                                    <h2> Find Your Business</h2>\n                                    <p>By clicking register, I represent I have read, understand, and agree to the Postmates Privacy Policy and Terms of Service. This site is protected bt reCAPTCHA and google Privacy Policy and Terms of Service apply.</p>\n                                </div>\n                            \n                                \n    \n                                <button type=\"submit\" className=\"btn btn-primary\">Register</button>\n                                 {err ?<div class=\"form-group\"><br /><h6>{message}</h6></div>: null}\n                                <div className=\"login-links-wrapper login-links-extra-links\">\n                                    <a href=\"login.html\" className=\"link-btn\">Already have an account? <strong>Log In</strong></a>\n                                </div>\n                          \t\t\t\t\t\t\t\n    \n                                \n                            </form>\n}\n                        </div>\n                  \n    \n                    </div>\n              \n    \n                    \n                </div>\t\t\t\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Register","import React, { useState } from 'react'\nimport './forgot-password.css'\nimport { Auth } from 'aws-amplify';\n\nconst ForgotPassword = () => {\n    const [username,setUserName] = useState()\n    const [code,setCode] = useState()\n    const [new_password,setPassword] = useState()\n    const [confirmPass,setConfirmPass] = useState()\n    const [email,setEmail] = useState(false)\n    const [message,setMessgae] = useState(false)\n    const [error,setError] = useState(false)\n    const [emailError,setEmailError] = useState(false)\n    const [passErr,setPassErr] = useState(false)\n\n    const submitEmail = e => {\n        e.preventDefault()\n    Auth.forgotPassword(username)\n    .then(data => setEmail(true) )\n    .catch(err => setEmailError(true));\n        e.target.reset()\n    }\n   \n    const submitPassword = e => {\n        setError(false)\n        setPassErr(false)\n        e.preventDefault()\n        if(new_password === confirmPass){\n    Auth.forgotPasswordSubmit(username, code, new_password)\n    .then(data => setMessgae(true) )\n    .catch(err => setError(true));\n    setPassword('')\n    setCode('')\n    e.target.reset()}\n    else{\n        setPassErr(true)\n        e.target.reset()\n    }\n   }\n\n   const handleChange = e => {\n    if (e.target.id === 'username') {\n      setUserName(e.target.value)\n      \n    } else if (e.target.id === 'password') {\n      setPassword(e.target.value)\n    }\n    else if (e.target.id === 'code') {\n        setCode(e.target.value)\n      }\n      else if (e.target.id === 'conPassword') {\n        setConfirmPass(e.target.value)\n      }\n}\n\nif(email === true)\n{ return(\n    <div class=\"login-wrapper\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\t\t\t\n            <div class=\"col-md-6 cover-image\"> </div>\n            <div class=\"col-md-6\">\n                <div class=\"login-form-wrapper\">\n                    <div class=\"login-form-header\">\n                        <h1>Reset Password </h1>\n                        <p> Enter the code sent to your Registered Email And also Enter your new password </p>\n                    </div>\n                    <div class=\"login-form-nested-wrapper\">\n                        <form onSubmit = {e => submitPassword(e)}>\n                            <div class=\"form-group\">\n                                <input type=\"text\" id=\"code\" class=\"form-control\" onChange={e => handleChange(e)} placeholder=\"Verification Code\"/>\n                            </div>\n                            <div class=\"form-group\">\n                                <input type=\"password\" id=\"password\" class=\"form-control\" onChange={e => handleChange(e)} placeholder=\"New Password\"/>\n                            </div>\n                            <div class=\"form-group\">\n                                <input type=\"password\" id=\"conPassword\" class=\"form-control\" onChange={e => handleChange(e)} placeholder=\"Confirm Password\"/>\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n                            {message ?<div class=\"form-group\"><br /><h5>Your password succesfully Changed </h5></div>: null}\n                            {error ?<div class=\"form-group\"><br /><h6> Invalid Verification Code</h6></div>: null}\n                            {passErr ?<div class=\"form-group\"><br /><h6> Password Does not Match</h6></div>: null}\n                            <div class=\"login-links-wrapper\">\n                                <a href=\"login.html\" class=\"link-btn\"> Back to Login </a>\n                            </div>\n                        \n                            \n                        </form>\n                    </div>\n            \n\n                </div>\n\n                \n            </div>\t\t\t\n        </div>\n    </div>\n</div>\n)\n\n}\nelse{\n    return(\n        <div class=\"login-wrapper\">\n        <div class=\"container-fluid\">\n            <div class=\"row\">\t\t\t\n                <div class=\"col-md-6 cover-image\"> </div>\n                <div class=\"col-md-6\">\n                    <div class=\"login-form-wrapper\">\n                        <div class=\"login-form-header\">\n                            <h1>Reset Password </h1>\n                            <p> Enter the email address you registered with and we'll send you instruction to Reset your password </p>\n                        </div>\n                        <div class=\"login-form-nested-wrapper\">\n                            <form onSubmit = {e => submitEmail(e)}>\n                                <div class=\"form-group\">\n                                    <input type=\"email\" id=\"username\" class=\"form-control\" onChange={e => handleChange(e)} placeholder=\"Email address\"/>\n                                </div>\n                                <button type=\"submit\" class=\"btn btn-primary\">Reset</button>\n                                \n                                {emailError ?<div class=\"form-group\"><br /><h6>This Email is not Registered.</h6></div>: null}\n                                <div class=\"login-links-wrapper\">\n                                    <a href=\"login.html\" class=\"link-btn\"> Back to Login </a>\n                                </div>\n                            \n                                \n                            </form>\n                        </div>\n                \n    \n                    </div>\n    \n                    \n                </div>\t\t\t\n            </div>\n        </div>\n    </div>\n    )\n\n}\n    \n}\n\nexport default ForgotPassword","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Login from '../containers/login/index'\nimport Register from '../containers/register/index'\nimport ForgotPassword from '../containers/forgot-password/index'\n\n\n\n\nconst Routes = () => (\n  <Router>\n    <Switch>\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/forgot-password\" component={ForgotPassword} />\n          <Redirect exact from=\"/*\" to=\"/login\" />\n        </Switch>\n    \n  </Router>\n)\n\nexport default Routes","import React from 'react';\nimport './App.css';\nimport Routes from './routes'\n\nfunction App() {\n  return(\n    <Routes />\n  )\n   \n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-1\",\n    \"aws_cognito_identity_pool_id\": \"us-east-1:3189e103-8335-4b48-bb26-71e14898acc4\",\n    \"aws_cognito_region\": \"us-east-1\",\n    \"aws_user_pools_id\": \"us-east-1_W5dpJ0PhM\",\n    \"aws_user_pools_web_client_id\": \"7v7acardjlsrksegaim52bbqv4\",\n    \"oauth\": {}\n};\n\n\nexport default awsmobile;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Amplify from \"aws-amplify\";\nimport awsExports from \"./aws-exports\";\nAmplify.configure(awsExports);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}